@model Restaurant_Management.Models.Order_Items

@{
    ViewBag.Title = "CreateOrderItems";
}

<h2>CreateOrderItems</h2>
<hr />

<div class="container">
    <div class="row">
        <div class="col-4">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MenuId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MenuId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MenuId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ItemPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ItemPrice, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ItemPrice, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TotalPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TotalPrice, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TotalPrice, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Portion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Portion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Portion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.OrderId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.OrderId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OrderId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

            <script src="~/JS/jquery.validate.js"></script>
            <script src="~/JS/jquery.validate.unobtrusive.min.js"></script>
        </div>

        <div class="col-8">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Menu Name</th>
                        <th>Quantity</th>
                        <th>Item Price</th>
                        <th>Total Price</th>
                        <th>Status</th>
                        <th>Portion</th>
                        <th>Order Id</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in ViewBag.OrderItems)
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>@item.MenuName</td>
                            <td>@item.Quantity</td>
                            <td>@item.ItemPrice</td>
                            <td>@item.TotalPrice</td>
                            <td>@item.Status</td>
                            <td>@item.Portion</td>
                            <td>@item.OrderId<td>
                            <td>
                                @Html.ActionLink("Edit", "CreateCustomer", new { Id = item.Id }, new { @class = "btn btn-sm btn-info" })
                                @Html.ActionLink("Delete", "Delete", new { Id = item.Id }, new { @class = "btn btn-sm btn-danger" })
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>

